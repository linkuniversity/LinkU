'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = printHTMLForWrapper;

var _instance = require('./instance');

var _instance2 = _interopRequireDefault(_instance);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/* eslint-disable no-console */
var noop = function noop() {};
var error = console.error;

function mapWrappersHTML(wrapper) {
  return wrapper.nodes.map(function (node) {
    var inst = (0, _instance2.default)(node);
    var type = node.type || inst._tag;

    console.error = noop;

    var _ref = node.props ? node.props : inst._currentElement.props,
        children = _ref.children,
        props = _objectWithoutProperties(_ref, ['children']);

    console.error = error;

    var transformedProps = Object.keys(props).map(function (key) {
      return key + '="' + props[key] + '"';
    });
    var stringifiedNode = '<' + type + ' ' + transformedProps.join(' ');

    if (children) {
      stringifiedNode += '>[..children..]</' + node.type;
    } else {
      stringifiedNode += '/>';
    }

    return stringifiedNode;
  });
}

function printHTMLForWrapper(wrapper) {
  switch (wrapper.nodes.length) {
    case 0:
      {
        return '[empty set]';
      }
    case 1:
      {
        return wrapper.html();
      }
    default:
      {
        var nodes = mapWrappersHTML(wrapper).reduce(function (acc, curr, index) {
          return '' + acc + index + ': ' + curr + '\n';
        }, '');

        return 'Multiple nodes found:\n' + nodes;
      }
  }
}
module.exports = exports['default'];